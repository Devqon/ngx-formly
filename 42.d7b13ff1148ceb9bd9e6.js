(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{"+aiL":function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFieldCustomInput <span class="token punctuation" >}</span> from <span class="token string" >\'./custom-input.component\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      validationMessages<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'required\'</span><span class="token punctuation" >,</span> message<span class="token punctuation" >:</span> <span class="token string" >\'This field is required\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      types<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'custom\'</span><span class="token punctuation" >,</span> component<span class="token punctuation" >:</span> FormlyFieldCustomInput<span class="token punctuation" >,</span> wrappers<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'fieldset\'</span><span class="token punctuation" >,</span> <span class="token string" >\'label\'</span><span class="token punctuation" >]</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n    FormlyFieldCustomInput<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'},"HDh+":function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-custom-input',\n  template: `\n    <input [type]=\"type\" [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n  `,\n})\nexport class FormlyFieldCustomInput extends FieldType {\n  get type() {\n    return this.to.type || 'text';\n  }\n}\n"},Jykj:function(n,s){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>button<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-default<span class="token punctuation" >"</span></span> <span class="token attr-name" >(click)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options.resetModel()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Reset<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},M2SR:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FieldType <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-field-custom-input\'</span><span class="token punctuation" >,</span>\n  template<span class="token punctuation" >:</span> `\n    <span class="token operator" >&lt;</span>input <span class="token punctuation" >[</span>type<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"type"</span> <span class="token punctuation" >[</span>formControl<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"formControl"</span> <span class="token punctuation" >[</span>formlyAttributes<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"field"</span><span class="token operator" >></span>\n  `<span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >FormlyFieldCustomInput</span> <span class="token keyword" >extends</span> <span class="token class-name" >FieldType</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >get</span> <span class="token function" >type</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>to<span class="token punctuation" >.</span>type <span class="token operator" >||</span> <span class="token string" >\'text\'</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},TK5j:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { FormlyFieldCustomInput } from './custom-input.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n      ],\n      types: [\n        { name: 'custom', component: FormlyFieldCustomInput, wrappers: ['fieldset', 'label'] },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    FormlyFieldCustomInput,\n  ],\n})\nexport class AppModule { }\n"},aGt6:function(n,s,a){"use strict";a.r(s);var t=a("CcnG"),o=a("gIcY"),p=function(){function n(){this.form=new o.FormGroup({}),this.model={},this.options={formState:{awesomeIsForced:!1}},this.fields=[{key:"text",type:"input",templateOptions:{label:"Text",placeholder:"Formly is terrific!",required:!0}},{key:"nested.story",type:"textarea",templateOptions:{label:"Some sweet story",placeholder:"It allows you to build and maintain your forms with the ease of JavaScript :-)",description:""},expressionProperties:{"templateOptions.focus":"formState.awesomeIsForced","templateOptions.description":function(n,s){if(s.awesomeIsForced)return"And look! This field magically got focus!"}}},{key:"awesome",type:"checkbox",templateOptions:{label:""},expressionProperties:{"templateOptions.disabled":"formState.awesomeIsForced","templateOptions.label":function(n,s){return s.awesomeIsForced?"Too bad, formly is really awesome...":"Is formly totally awesome? (uncheck this and see what happens)"}}},{key:"whyNot",type:"textarea",expressionProperties:{"templateOptions.placeholder":function(n,s){return s.awesomeIsForced?"Too bad... It really is awesome! Wasn't that cool?":"Type in here... I dare you"},"templateOptions.disabled":"formState.awesomeIsForced"},hideExpression:"model.awesome",templateOptions:{label:"Why Not?",placeholder:"Type in here... I dare you"}},{key:"custom",type:"custom",templateOptions:{label:"Custom inlined"}}]}return n.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},n}(),e={examples:[{title:"Introduction Example",description:"This is a small subset of the things that formly can do :-) See the other examples and the documentation for more.",component:p,files:[{file:"app.component.html",content:a("Jykj"),filecontent:a("c8mM")},{file:"app.component.ts",content:a("zKsW"),filecontent:a("wx4L")},{file:"app.module.ts",content:a("+aiL"),filecontent:a("TK5j")},{file:"custom-input.component.ts",content:a("M2SR"),filecontent:a("HDh+")}]}]},l=function(){},c=a("NcP4"),u=a("goW2"),i=a("MT1c"),r=a("1Q/V"),k=a("9+aI"),m=a("haId"),d=a("LJsP"),f=a("yR2A"),y=a("Bbog"),g=a("fFVA"),b=a("Nntq"),w=a("L0Z1"),h=a("grA4"),F=a("gfpZ"),v=a("mrSG"),C=function(n){function s(){return null!==n&&n.apply(this,arguments)||this}return Object(v.__extends)(s,n),Object.defineProperty(s.prototype,"type",{get:function(){return this.to.type||"text"},enumerable:!0,configurable:!0}),s}(a("HkYz").b),x=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function O(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,6,"input",[],[[8,"type",0],[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"input"],[null,"blur"],[null,"compositionstart"],[null,"compositionend"],[null,"focus"]],function(n,s,a){var o=!0;return"input"===s&&(o=!1!==t["\u0275nov"](n,1)._handleInput(a.target.value)&&o),"blur"===s&&(o=!1!==t["\u0275nov"](n,1).onTouched()&&o),"compositionstart"===s&&(o=!1!==t["\u0275nov"](n,1)._compositionStart()&&o),"compositionend"===s&&(o=!1!==t["\u0275nov"](n,1)._compositionEnd(a.target.value)&&o),"focus"===s&&(o=!1!==t["\u0275nov"](n,6).onFocus()&&o),"blur"===s&&(o=!1!==t["\u0275nov"](n,6).onBlur()&&o),o},null,null)),t["\u0275did"](1,16384,null,0,o.DefaultValueAccessor,[t.Renderer2,t.ElementRef,[2,o.COMPOSITION_BUFFER_MODE]],null,null),t["\u0275prd"](1024,null,o.NG_VALUE_ACCESSOR,function(n){return[n]},[o.DefaultValueAccessor]),t["\u0275did"](3,540672,null,0,o.FormControlDirective,[[8,null],[8,null],[6,o.NG_VALUE_ACCESSOR],[2,o["\u0275angular_packages_forms_forms_j"]]],{form:[0,"form"]},null),t["\u0275prd"](2048,null,o.NgControl,null,[o.FormControlDirective]),t["\u0275did"](5,16384,null,0,o.NgControlStatus,[[4,o.NgControl]],null,null),t["\u0275did"](6,540672,null,0,F.a,[t.Renderer2,t.ElementRef],{field:[0,"field"]},null)],function(n,s){var a=s.component;n(s,3,0,a.formControl),n(s,6,0,a.field)},function(n,s){n(s,0,0,s.component.type,t["\u0275nov"](s,5).ngClassUntouched,t["\u0275nov"](s,5).ngClassTouched,t["\u0275nov"](s,5).ngClassPristine,t["\u0275nov"](s,5).ngClassDirty,t["\u0275nov"](s,5).ngClassValid,t["\u0275nov"](s,5).ngClassInvalid,t["\u0275nov"](s,5).ngClassPending)})}var I=t["\u0275ccf"]("formly-field-custom-input",C,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-field-custom-input",[],null,null,null,O,x)),t["\u0275did"](1,16760832,null,0,C,[],null,null)],function(n,s){n(s,1,0)},null)},{form:"form",field:"field",model:"model",options:"options"},{},[]),S=a("pMnS"),M=a("4o01"),_=a("Dl9q"),T=a("9Glx"),N=a("UcnZ"),R=a("wdLZ"),A=a("DAbo"),L=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function P(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,10,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(n,s,a){var o=!0,p=n.component;return"submit"===s&&(o=!1!==t["\u0275nov"](n,2).onSubmit(a)&&o),"reset"===s&&(o=!1!==t["\u0275nov"](n,2).onReset()&&o),"ngSubmit"===s&&(o=!1!==p.submit()&&o),o},null,null)),t["\u0275did"](1,16384,null,0,o["\u0275angular_packages_forms_forms_bg"],[],null,null),t["\u0275did"](2,540672,null,0,o.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),t["\u0275prd"](2048,null,o.ControlContainer,null,[o.FormGroupDirective]),t["\u0275did"](4,16384,null,0,o.NgControlStatusGroup,[[4,o.ControlContainer]],null,null),(n()(),t["\u0275eld"](5,0,null,null,5,"formly-form",[],null,null,null,_.b,_.a)),t["\u0275did"](6,966656,null,0,T.a,[N.a,R.a,A.b,[2,o.NgForm],[2,o.FormGroupDirective],[3,T.a]],{model:[0,"model"],form:[1,"form"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),t["\u0275eld"](7,0,null,0,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Submit"])),(n()(),t["\u0275eld"](9,0,null,0,1,"button",[["class","btn btn-default"],["type","button"]],null,[[null,"click"]],function(n,s,a){var t=!0;return"click"===s&&(t=!1!==n.component.options.resetModel()&&t),t},null,null)),(n()(),t["\u0275ted"](-1,null,["Reset"]))],function(n,s){var a=s.component;n(s,2,0,a.form),n(s,6,0,a.model,a.form,a.fields,a.options)},function(n,s){n(s,0,0,t["\u0275nov"](s,4).ngClassUntouched,t["\u0275nov"](s,4).ngClassTouched,t["\u0275nov"](s,4).ngClassPristine,t["\u0275nov"](s,4).ngClassDirty,t["\u0275nov"](s,4).ngClassValid,t["\u0275nov"](s,4).ngClassInvalid,t["\u0275nov"](s,4).ngClassPending)})}var D=t["\u0275ccf"]("formly-app-example",p,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,P,L)),t["\u0275did"](1,49152,null,0,p,[],null,null)],null,null)},{},{},[]),G=a("Ip0R"),E=a("M2Lx"),q=a("eDkP"),J=a("Fzqc"),W=a("v9Dh"),U=a("6LlJ"),B=a("F6kA"),j=a("dWZg"),z=a("lLAP"),V=a("4c35"),Z=a("qAlS"),K=a("Wf4p"),Q=a("La40"),H=a("SMsm"),Y=a("UodH"),X=a("5QwG"),$=a("Nsh5"),nn=a("8mMr"),sn=a("LC5p"),an=a("0/Q6"),tn=a("mqvi"),on=a("XR12"),pn=a("1ey0"),en=function(){},ln=a("ZYCi"),cn=a("AMrk"),un=a("me7w"),rn=a("N3PW"),kn=a("l4pn"),mn=a("Fv2i"),dn=a("wBYW"),fn=a("IE48"),yn=a("Ltwa"),gn=a("4Mh+"),bn=a("b7gF"),wn=a("DJQk"),hn=a("zn1Q"),Fn=a("CgTb"),vn=a("+oK5"),Cn=a("zdmU"),xn=a("cIcG");a.d(s,"ConfigModuleNgFactory",function(){return On});var On=t["\u0275cmf"](l,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[c.a,u.a,i.a,r.a,k.a,m.a,d.a,f.a,y.a,g.a,b.a,w.a,h.a,I,S.a,M.a,D]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,G.NgLocalization,G.NgLocaleLocalization,[t.LOCALE_ID,[2,G["\u0275angular_packages_common_common_a"]]]),t["\u0275mpd"](4608,E.c,E.c,[]),t["\u0275mpd"](4608,q.c,q.c,[q.i,q.e,t.ComponentFactoryResolver,q.h,q.f,t.Injector,t.NgZone,G.DOCUMENT,J.b]),t["\u0275mpd"](5120,q.j,q.k,[q.c]),t["\u0275mpd"](5120,W.b,W.c,[q.c]),t["\u0275mpd"](4608,U.a,U.a,[]),t["\u0275mpd"](4608,B.a,B.a,[]),t["\u0275mpd"](4608,o.FormBuilder,o.FormBuilder,[]),t["\u0275mpd"](4608,o["\u0275angular_packages_forms_forms_i"],o["\u0275angular_packages_forms_forms_i"],[]),t["\u0275mpd"](4608,A.b,A.b,[A.a]),t["\u0275mpd"](4608,R.a,R.a,[]),t["\u0275mpd"](4608,N.a,N.a,[A.b,R.a]),t["\u0275mpd"](1073742336,G.CommonModule,G.CommonModule,[]),t["\u0275mpd"](1073742336,j.b,j.b,[]),t["\u0275mpd"](1073742336,E.d,E.d,[]),t["\u0275mpd"](1073742336,z.a,z.a,[]),t["\u0275mpd"](1073742336,J.a,J.a,[]),t["\u0275mpd"](1073742336,V.g,V.g,[]),t["\u0275mpd"](1073742336,Z.b,Z.b,[]),t["\u0275mpd"](1073742336,q.g,q.g,[]),t["\u0275mpd"](1073742336,K.l,K.l,[[2,K.d]]),t["\u0275mpd"](1073742336,W.e,W.e,[]),t["\u0275mpd"](1073742336,K.w,K.w,[]),t["\u0275mpd"](1073742336,Q.i,Q.i,[]),t["\u0275mpd"](1073742336,H.b,H.b,[]),t["\u0275mpd"](1073742336,Y.c,Y.c,[]),t["\u0275mpd"](1073742336,X.b,X.b,[]),t["\u0275mpd"](1073742336,$.h,$.h,[]),t["\u0275mpd"](1073742336,nn.b,nn.b,[]),t["\u0275mpd"](1073742336,K.m,K.m,[]),t["\u0275mpd"](1073742336,K.u,K.u,[]),t["\u0275mpd"](1073742336,sn.b,sn.b,[]),t["\u0275mpd"](1073742336,an.c,an.c,[]),t["\u0275mpd"](1073742336,tn.a,tn.a,[]),t["\u0275mpd"](1073742336,o["\u0275angular_packages_forms_forms_bb"],o["\u0275angular_packages_forms_forms_bb"],[]),t["\u0275mpd"](1073742336,o.ReactiveFormsModule,o.ReactiveFormsModule,[]),t["\u0275mpd"](1073742336,on.a,on.a,[]),t["\u0275mpd"](1073742336,pn.a,pn.a,[]),t["\u0275mpd"](1073742336,en,en,[]),t["\u0275mpd"](1073742336,ln.r,ln.r,[[2,ln.x],[2,ln.o]]),t["\u0275mpd"](1073742336,l,l,[]),t["\u0275mpd"](1024,A.a,function(){return[{types:[{name:"formly-group",component:cn.a}]},{types:[{name:"input",component:un.a,wrappers:["fieldset","label"]},{name:"checkbox",component:rn.a,wrappers:["fieldset"],defaultOptions:{templateOptions:{indeterminate:!0}}},{name:"radio",component:kn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"select",component:mn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"textarea",component:dn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{cols:1,rows:1}}},{name:"multicheckbox",component:fn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}}],wrappers:[{name:"label",component:yn.a},{name:"description",component:gn.a},{name:"validation-message",component:bn.a},{name:"fieldset",component:wn.a},{name:"addons",component:hn.a}],manipulators:[{class:Fn.a,method:"run"},{class:vn.a,method:"run"},{class:Cn.a,method:"run"}]},{types:[{name:"formly-group",component:cn.a}]},{validationMessages:[{name:"required",message:"This field is required"}],types:[{name:"custom",component:C,wrappers:["fieldset","label"]}]}]},[]),t["\u0275mpd"](1024,ln.m,function(){return[[{path:"",component:xn.a,data:e}]]},[])])})},c8mM:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button">Submit</button>\n    <button type="button" class="btn btn-default" (click)="options.resetModel()">Reset</button>\n  </formly-form>\n</form>\n'},wx4L:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {\n    formState: {\n      awesomeIsForced: false,\n    },\n  };\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'text',\n      type: 'input',\n      templateOptions: {\n        label: 'Text',\n        placeholder: 'Formly is terrific!',\n        required: true,\n      },\n    },\n    {\n      key: 'nested.story',\n      type: 'textarea',\n      templateOptions: {\n        label: 'Some sweet story',\n        placeholder: 'It allows you to build and maintain your forms with the ease of JavaScript :-)',\n        description: '',\n      },\n      expressionProperties: {\n        'templateOptions.focus': 'formState.awesomeIsForced',\n        'templateOptions.description': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'And look! This field magically got focus!';\n          }\n        },\n      },\n    },\n    {\n      key: 'awesome',\n      type: 'checkbox',\n      templateOptions: { label: '' },\n      expressionProperties: {\n        'templateOptions.disabled': 'formState.awesomeIsForced',\n        'templateOptions.label': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'Too bad, formly is really awesome...';\n          } else {\n            return 'Is formly totally awesome? (uncheck this and see what happens)';\n          }\n        },\n      },\n    },\n    {\n      key: 'whyNot',\n      type: 'textarea',\n      expressionProperties: {\n        'templateOptions.placeholder': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'Too bad... It really is awesome! Wasn\\'t that cool?';\n          } else {\n            return 'Type in here... I dare you';\n          }\n        },\n        'templateOptions.disabled': 'formState.awesomeIsForced',\n      },\n      hideExpression: 'model.awesome',\n      templateOptions: {\n        label: 'Why Not?',\n        placeholder: 'Type in here... I dare you',\n      },\n    },\n    {\n      key: 'custom',\n      type: 'custom',\n      templateOptions: {\n        label: 'Custom inlined',\n      },\n    },\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},zKsW:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  model<span class="token punctuation" >:</span> <span class="token keyword" >any</span> <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span>\n    formState<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      awesomeIsForced<span class="token punctuation" >:</span> <span class="token keyword" >false</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span> <span class="token operator" >=</span> <span class="token punctuation" >[</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'text\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Text\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'Formly is terrific!\'</span><span class="token punctuation" >,</span>\n        required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'nested.story\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'textarea\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Some sweet story\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'It allows you to build and maintain your forms with the ease of JavaScript :-)\'</span><span class="token punctuation" >,</span>\n        description<span class="token punctuation" >:</span> <span class="token string" >\'\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      expressionProperties<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        <span class="token string" >\'templateOptions.focus\'</span><span class="token punctuation" >:</span> <span class="token string" >\'formState.awesomeIsForced\'</span><span class="token punctuation" >,</span>\n        <span class="token string" >\'templateOptions.description\'</span><span class="token punctuation" >:</span> <span class="token punctuation" >(</span>model<span class="token punctuation" >,</span> formState<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >if</span> <span class="token punctuation" >(</span>formState<span class="token punctuation" >.</span>awesomeIsForced<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'And look! This field magically got focus!\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'awesome\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'checkbox\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span> label<span class="token punctuation" >:</span> <span class="token string" >\'\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      expressionProperties<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        <span class="token string" >\'templateOptions.disabled\'</span><span class="token punctuation" >:</span> <span class="token string" >\'formState.awesomeIsForced\'</span><span class="token punctuation" >,</span>\n        <span class="token string" >\'templateOptions.label\'</span><span class="token punctuation" >:</span> <span class="token punctuation" >(</span>model<span class="token punctuation" >,</span> formState<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >if</span> <span class="token punctuation" >(</span>formState<span class="token punctuation" >.</span>awesomeIsForced<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Too bad, formly is really awesome...\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span> <span class="token keyword" >else</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Is formly totally awesome? (uncheck this and see what happens)\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'whyNot\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'textarea\'</span><span class="token punctuation" >,</span>\n      expressionProperties<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        <span class="token string" >\'templateOptions.placeholder\'</span><span class="token punctuation" >:</span> <span class="token punctuation" >(</span>model<span class="token punctuation" >,</span> formState<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >if</span> <span class="token punctuation" >(</span>formState<span class="token punctuation" >.</span>awesomeIsForced<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Too bad... It really is awesome! Wasn\\\'t that cool?\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span> <span class="token keyword" >else</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Type in here... I dare you\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token string" >\'templateOptions.disabled\'</span><span class="token punctuation" >:</span> <span class="token string" >\'formState.awesomeIsForced\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      hideExpression<span class="token punctuation" >:</span> <span class="token string" >\'model.awesome\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Why Not?\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'Type in here... I dare you\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'custom\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'custom\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Custom inlined\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span>valid<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'}}]);